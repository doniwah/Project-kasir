package form_utama;

import com.formdev.flatlaf.FlatLightLaf;
import javax.swing.SwingUtilities;
import javax.swing.UIManager;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.Statement;
import javax.swing.JOptionPane;
import java.sql.*;
import javax.swing.table.DefaultTableModel;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
/**
 *
 * @author acer
 */
public class BahanBaku extends javax.swing.JPanel {

    private String buat_status = "";
    private DefaultTableModel tabModel;
    private Connection conn;
    private PreparedStatement pst;
    private ResultSet rs;

    /**
     * Creates new form BahanBaku
     */
    public BahanBaku() {
        initComponents();
        tampil_barang();
        try {
            UIManager.setLookAndFeel(new FlatLightLaf());
            SwingUtilities.updateComponentTreeUI(this);
        } catch (Exception e) {
            e.printStackTrace();
        }
        SwingUtilities.invokeLater(() -> {
            table.setVisible(true);

        });
    }

    private void tampil_barang() {
        Object[] baris = {"Kode Bahan", "Nama Bahan", "Jumlah Stok", "Satuan", "Harga PerSatuan", "Status Stok"};
        tabModel = new DefaultTableModel(null, baris);
        table.setModel(tabModel);
        String sql = "SELECT * FROM bahan_baku ORDER BY kd_bahan ASC";

        try (Connection konek = new Config().ConfigDB(); Statement stat = konek.createStatement(); ResultSet hasil = stat.executeQuery(sql)) {

            while (hasil.next()) {
                String kode_bahan = hasil.getString("kd_bahan");
                String nama_bahan = hasil.getString("nama_bahan");
                String stok = hasil.getString("jumlah_stok");
                String satuan = hasil.getString("satuan");
                String harga = hasil.getString("harga_bahan");
                //String status = hasil.getString("status_stok");

                // Tentukan status stok berdasarkan jumlah stok
                int jumlahStok = Integer.parseInt(stok);

                if (jumlahStok == 0) {
                    buat_status = "Habis";
                } else if (jumlahStok < 20) {
                    buat_status = "Hampir Habis";
                } else {
                    buat_status = "Tersedia";
                }

                // Tambahkan data ke tabel model
                String[] data = {kode_bahan, nama_bahan, stok, satuan, harga, buat_status};
                tabModel.addRow(data);
            }
        } catch (Exception e) {
            e.printStackTrace(); // Untuk debug, cetak stack trace error
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        text_cari = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setLayout(new java.awt.CardLayout());

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        table.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        table.setForeground(new java.awt.Color(164, 192, 239));
        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        table.setEnabled(false);
        jScrollPane1.setViewportView(table);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 230, 850, 430));

        text_cari.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                text_cariActionPerformed(evt);
            }
        });
        text_cari.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                text_cariKeyTyped(evt);
            }
        });
        jPanel1.add(text_cari, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 142, 680, 40));

        jButton1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jButton1.setForeground(new java.awt.Color(164, 192, 239));
        jButton1.setText("CARI");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 140, 100, 40));

        jLabel2.setBackground(new java.awt.Color(102, 0, 0));
        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 30)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(164, 192, 239));
        jLabel2.setText("BAHAN BAKU");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 50, -1, -1));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/batik azure.png"))); // NOI18N
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 990, 770));

        add(jPanel1, "card2");
    }// </editor-fold>//GEN-END:initComponents

    private void text_cariActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_text_cariActionPerformed

    }//GEN-LAST:event_text_cariActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        String kataCari = text_cari.getText().trim();

        // Validasi jika TextField kosong
        if (kataCari.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Silakan masukkan kata kunci pencarian!");
            text_cari.requestFocus();
            return;
        }

        try {
            // Mengosongkan tabel
            tabModel.getDataVector().removeAllElements();
            tabModel.fireTableDataChanged();

            // Query pencarian
            String sql = "SELECT * FROM bahan_baku WHERE nama_bahan LIKE ?";
            Connection konek = new Config().ConfigDB();
            pst = konek.prepareStatement(sql);
            pst.setString(1, "%" + kataCari + "%");
            rs = pst.executeQuery();

            boolean ditemukan = false;

            // Menampilkan hasil pencarian ke tabel
            while (rs.next()) {
                ditemukan = true;
                Object[] obj = new Object[6];
                obj[0] = rs.getString("kd_bahan");
                obj[1] = rs.getString("nama_bahan");
                obj[2] = rs.getString("jumlah_stok");
                obj[3] = rs.getString("satuan");
                obj[4] = rs.getString("harga_bahan");
                String stok = rs.getString("jumlah_stok");
                int jumlah_stok = Integer.parseInt(stok);
                String status = "";
                if (jumlah_stok == 0) {
                    status = "Habis";
                } else if (jumlah_stok < 20) {
                    status = "Hampir Habis";
                } else {
                    status = "Tersedia";
                }
                obj[5] = status;
                //obj[4] = "Rp " + String.format("%,d", rs.getInt("harga"));

                tabModel.addRow(obj);
            }

            // Jika data tidak ditemukan
            if (!ditemukan) {
                JOptionPane.showMessageDialog(this,
                        "Data bahan baku dengan kata kunci '" + kataCari + "' tidak ditemukan!");
                text_cari.setText("");
                text_cari.requestFocus();
                //tampil_barang(); // Menampilkan kembali semua data
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error pencarian: " + e.getMessage());
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void text_cariKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_text_cariKeyTyped
        if (text_cari.getText().trim().isEmpty()) {
            tampil_barang();  // Panggil metode untuk menampilkan semua data
            System.out.println("berhasil");
        }
    }//GEN-LAST:event_text_cariKeyTyped


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable table;
    private javax.swing.JTextField text_cari;
    // End of variables declaration//GEN-END:variables
}
